package net.sf.regadb.io.datasetAccess;
import net.sf.regadb.db.Analysis;
import net.sf.regadb.db.QueryDefinitionRunParameter;
import net.sf.regadb.db.QueryDefinitionRun;
import net.sf.regadb.db.ValueType;
import net.sf.regadb.db.AnalysisData;
import net.sf.regadb.db.SettingsUser;
import net.sf.regadb.db.DrugClass;
import net.sf.regadb.db.QueryDefinitionParameterType;
import net.sf.regadb.db.ResistanceInterpretationTemplate;
import net.sf.regadb.db.AttributeGroup;
import net.sf.regadb.db.AaSequence;
import net.sf.regadb.db.QueryDefinition;
import net.sf.regadb.db.ViralIsolate;
import net.sf.regadb.db.Event;
import net.sf.regadb.db.UserAttribute;
import net.sf.regadb.db.PatientAttributeValue;
import net.sf.regadb.db.TestObject;
import net.sf.regadb.db.DatasetAccess;
import net.sf.regadb.db.Therapy;
import net.sf.regadb.db.AttributeNominalValue;
import net.sf.regadb.db.QueryDefinitionParameter;
import net.sf.regadb.db.TestNominalValue;
import net.sf.regadb.db.DrugGeneric;
import net.sf.regadb.db.Patient;
import net.sf.regadb.db.NtSequence;
import net.sf.regadb.db.Protein;
import net.sf.regadb.db.Attribute;
import net.sf.regadb.db.TestResult;
import net.sf.regadb.db.AnalysisType;
import net.sf.regadb.db.TherapyMotivation;
import net.sf.regadb.db.TestType;
import net.sf.regadb.db.EventNominalValue;
import net.sf.regadb.db.AaInsertion;
import net.sf.regadb.db.TherapyCommercial;
import net.sf.regadb.db.AaMutation;
import net.sf.regadb.db.Test;
import net.sf.regadb.db.PatientDataset;
import net.sf.regadb.db.PatientEventValue;
import net.sf.regadb.db.Dataset;
import net.sf.regadb.db.TherapyGeneric;
import net.sf.regadb.db.DrugCommercial;
import java.util.Set;

public interface IDatasetAccess {
public boolean canAccessPatient(Patient Patientvar, Set<Dataset> datasets);
public boolean canAccessPatientEventValue(PatientEventValue PatientEventValuevar, Set<Dataset> datasets);
public boolean canAccessEvent(Event Eventvar, Set<Dataset> datasets);
public boolean canAccessValueType(ValueType ValueTypevar, Set<Dataset> datasets);
public boolean canAccessEventNominalValue(EventNominalValue EventNominalValuevar, Set<Dataset> datasets);
public boolean canAccessDataset(Dataset Datasetvar, Set<Dataset> datasets);
public boolean canAccessTestResult(TestResult TestResultvar, Set<Dataset> datasets);
public boolean canAccessTest(Test Testvar, Set<Dataset> datasets);
public boolean canAccessAnalysis(Analysis Analysisvar, Set<Dataset> datasets);
public boolean canAccessAnalysisData(AnalysisData AnalysisDatavar, Set<Dataset> datasets);
public boolean canAccessTestType(TestType TestTypevar, Set<Dataset> datasets);
public boolean canAccessTestObject(TestObject TestObjectvar, Set<Dataset> datasets);
public boolean canAccessTestNominalValue(TestNominalValue TestNominalValuevar, Set<Dataset> datasets);
public boolean canAccessPatientAttributeValue(PatientAttributeValue PatientAttributeValuevar, Set<Dataset> datasets);
public boolean canAccessAttribute(Attribute Attributevar, Set<Dataset> datasets);
public boolean canAccessAttributeGroup(AttributeGroup AttributeGroupvar, Set<Dataset> datasets);
public boolean canAccessAttributeNominalValue(AttributeNominalValue AttributeNominalValuevar, Set<Dataset> datasets);
public boolean canAccessViralIsolate(ViralIsolate ViralIsolatevar, Set<Dataset> datasets);
public boolean canAccessNtSequence(NtSequence NtSequencevar, Set<Dataset> datasets);
public boolean canAccessAaSequence(AaSequence AaSequencevar, Set<Dataset> datasets);
public boolean canAccessAaMutation(AaMutation AaMutationvar, Set<Dataset> datasets);
public boolean canAccessAaInsertion(AaInsertion AaInsertionvar, Set<Dataset> datasets);
public boolean canAccessTherapy(Therapy Therapyvar, Set<Dataset> datasets);
public boolean canAccessTherapyCommercial(TherapyCommercial TherapyCommercialvar, Set<Dataset> datasets);
public boolean canAccessTherapyGeneric(TherapyGeneric TherapyGenericvar, Set<Dataset> datasets);
}